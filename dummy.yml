- name: Deploy Dynamic Website with Apache2 and MySQL in Docker
  hosts: localhost
  become: true
  vars_prompt:
    - name: "dockerhub_username"
      prompt: "Enter your Docker Hub username"
      private: no
    - name: "dockerhub_password"
      prompt: "Enter your Docker Hub password"
      private: yes

  vars:
    github_url: "https://github.com/Hitesh-gp/Cafe_Dynamic_Website.git"  # Correct GitHub URL
    repo_dir: "/home/hitesh/Cafe_Dynamic_Website"  # Directory for cloned GitHub repo
    docker_image_name: "hiteshdocker31/dummyimage"  # Image name on Docker Hub
    container_name: "dummy_container"
    webapp_port: 8070

  tasks:
    - name: Install Docker
      apt:
        name: docker.io
        state: present
        update_cache: yes

    - name: Install Docker-Py (Docker SDK for Python)
      apt:
        name: python3-docker
        state: present

    - name: Docker login to Docker Hub
      docker_login:
        username: "{{ dockerhub_username }}"
        password: "{{ dockerhub_password }}"
        registry: "https://index.docker.io/v1/"

    - name: Check if Docker image exists on Docker Hub
      command: docker pull {{ docker_image_name }}
      register: docker_image_check
      ignore_errors: yes

    - name: Check if GitHub repository already exists locally
      stat:
        path: "{{ repo_dir }}"
      register: repo_exists

    - name: Clone GitHub repository if not already cloned
      git:
        repo: "{{ github_url }}"
        dest: "{{ repo_dir }}"
      when: repo_exists.stat.exists == false

    - name: Find the Dockerfile in the cloned repository
      find:
        paths: "{{ repo_dir }}"
        patterns: "Dockerfile"
        recurse: yes
        file_type: file
      register: dockerfile_result

    - name: Fail if Dockerfile is not found
      fail:
        msg: "Dockerfile not found in the GitHub repository."
      when: dockerfile_result.matched == 0

    - name: Debug Dockerfile result
      debug:
        var: dockerfile_result

    - name: Build Docker image from the located Dockerfile if image doesn't exist on Docker Hub
      command: >
        docker build -t {{ docker_image_name }} {{ dockerfile_result.files[0].path | dirname }}
      when: docker_image_check.failed == true

    - name: Push Docker image to Docker Hub
      docker_image:
        name: "{{ docker_image_name }}"
        push: yes
      when: docker_image_check.failed == true

    - name: Run MySQL container
      docker_container:
        name: mysql_container
        image: mysql:5.7
        restart_policy: always
        environment:
          MYSQL_ROOT_PASSWORD: rootpassword
          MYSQL_DATABASE: webapp_db
          MYSQL_USER: webapp_user
          MYSQL_PASSWORD: webapp_password
        ports:
          - "3306:3306"
        state: started

    - name: Run Apache2 and WebApp container
      docker_container:
        name: "{{ container_name }}"
        image: "{{ docker_image_name }}"
        ports:
          - "{{ webapp_port }}:80"
        links:
          - mysql_container:mysql
        env:
          DATABASE_HOST: mysql
          DATABASE_USER: webapp_user
          DATABASE_PASSWORD: webapp_password
          DATABASE_NAME: webapp_db
        state: started

    - name: Open web app in browser
      local_action:
        module: command
        cmd: "xdg-open http://localhost:{{ webapp_port }}"
      ignore_errors: yes
