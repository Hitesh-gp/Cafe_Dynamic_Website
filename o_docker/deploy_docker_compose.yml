# deploy_docker_compose.yml
- name: Deploy Cafe Dynamic Website with Docker Hub image management
  hosts: localhost
  connection: local
  vars:
    docker_hub_username: "hiteshdocker31"       # Replace with your Docker Hub username
    docker_image_name: "cafe_o_docker"         # Replace with your Docker image name
    docker_image_tag: "v1"
    docker_hub_image: "{{ docker_hub_username }}/{{ docker_image_name }}:{{ docker_image_tag }}"
    project_dir: "/home/hitesh/Cafe_Dynamic_Website/o_docker"   # Replace with the actual path to your project
  tasks:

    - name: Check if Docker image exists on Docker Hub
      shell: "docker pull {{ docker_hub_image }} || echo 'not_found'"
      register: pull_result
      ignore_errors: true

    - name: Build Docker image if not found on Docker Hub
      block:
        - name: Build Docker image from Dockerfile
          docker_image:
            path: "{{ project_dir }}/mompopcafe"
            dockerfile: Dockerfile
            name: "{{ docker_hub_image }}"
            tag: "{{ docker_image_tag }}"

        - name: Log in to Docker Hub
          docker_login:
            username: "{{ docker_hub_username }}"
            password: "{{ lookup('env', 'DOCKER_HUB_PASSWORD') }}"  # Set DOCKER_HUB_PASSWORD in your environment for security

        - name: Push Docker image to Docker Hub
          docker_image:
            name: "{{ docker_hub_image }}"
            push: true
            source: local
      when: pull_result.stdout.find("not_found") != -1

    - name: Pull Docker image (either from Docker Hub or after pushing)
      docker_image:
        name: "{{ docker_hub_image }}"
        source: pull

    - name: Stop existing Docker containers if running
      docker_compose:
        project_src: "{{ project_dir }}"
        state: absent

    - name: Deploy website and database using Docker Compose
      docker_compose:
        project_src: "{{ project_dir }}"
        state: present

    - name: Wait for MySQL to initialize
      wait_for:
        host: "127.0.0.1"
        port: 3307        # Change this to the port MySQL is mapped to on the host (3307)
        delay: 10         # Initial wait before checking
        timeout: 60       # Total timeout duration

    - name: Initialize the database (if not already initialized)
      shell: |
        docker exec -i mysql_new mysql -u root -pMsois@123 mom_pop_db < {{ project_dir }}/mompopdb/create-db.sql
      args:
        executable: /bin/bash
      register: db_init_result
      ignore_errors: true

    - name: Check database initialization result
      debug:
        msg: "Database initialized successfully." 
      when: db_init_result.rc == 0

